#Creating clone dataset
dataset_line <- `mumbai.monthly.rains[1]`
library(tidyverse)
library(ggplot2)
install.packages("ggseas")
library(ggseas)
`mumbai.monthly.rains[1]` <- read.csv("C:/Users/james/AppData/Local/Microsoft/Windows/INetCache/IE/UQV4WXFM/mumbai-monthly-rains[1].csv")
View(`mumbai.monthly.rains[1]`)
dataset_line <- `mumbai.monthly.rains[1]`
dataset_line <- dataset %>%
pivot_longer(cols = Jan:Dec,
names_to = "Month",
values_to = "Rainfall")
dataset_line <- dataset_line %>%
pivot_longer(cols = Jan:Dec,
names_to = "Month",
values_to = "Rainfall")
yearly_totals <- dataset_line %>%
group_by(Year) %>%
summarize(Total_Rainfall = sum(Rainfall, na.rm = TRUE))
View(yearly_totals)
ggplot(yearly_totals, aes(x = Year, y = Total_Rainfall)) +
geom_line(color = "steelblue", size = 1) +
geom_point(size = 2) +
labs(x = "Year (1900 - 2024)",
y = "Total Yearly Rainfall (in mm)",
title = "Total Yearly Rainfall in Mumbai (1900 - 2024)",
subtitle = "Visualizing the overall rainfall trend across years",
caption = "Data Source: Kaggle | Visualization: James Lewis") +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12))
library(gganimate)
#Adjusting table structure
dataset <- `mumbai.monthly.rains[1]`
dataset_anime <- dataset %>%
pivot_longer(cols = Jan:Dec,
names_to = "Month",
values_to = "Rainfall")
# Create a new column for the season based on the month
dataset_anime <- dataset_anime %>%
mutate(Season = case_when(
Month %in% c("Dec", "Jan", "Feb") ~ "Winter",
Month %in% c("Mar", "Apr", "May") ~ "Summer",
Month %in% c("Jun", "Jul", "Aug", "Sep") ~ "Monsoon",
Month %in% c("Oct", "Nov") ~ "Post-Monsoon"
))
View(dataset_anime)
dataset_anime <- dataset_anime %>%
mutate(Season = case_when(
Month %in% c("Dec", "Jan", "Feb") ~ "Winter",
Month %in% c("Mar", "April", "May") ~ "Summer",
Month %in% c("June", "July", "Aug", "Sept) ~ "Monsoon",
))
dataset_anime <- dataset_anime %>%
mutate(Season = case_when(
Month %in% c("Dec", "Jan", "Feb") ~ "Winter",
Month %in% c("Mar", "April", "May") ~ "Summer",
Month %in% c("June", "July", "Aug", "Sept") ~ "Monsoon",
Month %in% c("Oct", "Nov") ~ "Post-Monsoon"
))
seasonal_rainfall <- dataset_anime %>%
group_by(Year, Season) %>%
summarize(Total_Rainfall = sum(Rainfall, na.rm = TRUE))
View(seasonal_rainfall)
seasonal_plot <- ggplot(seasonal_rainfall, aes(x = Year, y = Total_Rainfall, colour = Season)) +
geom_line(size = 1.5) +  # Thicker lines
geom_point(size = 5, alpha = 0.8) +  # Larger points with some transparency
scale_color_manual(values = c("Winter" = "steelblue",
"Summer" = "orange",
"Monsoon" = "green",
"Post-Monsoon" = "purple")) +
labs(x = "Year (1900 - 2024)",
y = "Total Rainfall (in mm)",
title = "Seasonal Rainfall Trends in Mumbai (1900 - 2024)",
subtitle = "Grouped by Winter, Summer, Monsoon, and Post-Monsoon",
caption = "Data Source: Kaggle | Visualization: James Lewis") +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
legend.position = "right")
View(seasonal_plot)
seasonal_plot
seasonal_animation <- seasonal_plot +
transition_time(Year) +
ease_aes('linear') +
shadow_mark(alpha = 0.3, size = 1, colour = "gray")
# Render the animation
animate(seasonal_animation, nframes = 200, fps = 15, width = 800, height = 600, renderer = gifski_renderer("seasonal_rainfall_mumbai.gif"))
seasonal_plot
?ease_aes
seasonal_plot <- ggplot(seasonal_rainfall, aes(x = Year, y = Total_Rainfall, colour = Season)) +
geom_line(size = 4) +  # Thicker lines
geom_point(size = 5, alpha = 0.8) +  # Larger points with some transparency
scale_color_manual(values = c("Winter" = "steelblue",
"Summer" = "orange",
"Monsoon" = "green",
"Post-Monsoon" = "purple")) +
labs(x = "Year (1900 - 2024)",
y = "Total Rainfall (in mm)",
title = "Seasonal Rainfall Trends in Mumbai (1900 - 2024)",
subtitle = "Grouped by Winter, Summer, Monsoon, and Post-Monsoon",
caption = "Data Source: Kaggle | Visualization: James Lewis") +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
seasonal_plot <- ggplot(seasonal_rainfall, aes(x = Year, y = Total_Rainfall, colour = Season)) +
geom_line(size = 4) +  # Thicker lines
geom_point(size = 5, alpha = 0.8) +  # Larger points with some transparency
scale_color_manual(values = c("Winter" = "steelblue",
"Summer" = "orange",
"Monsoon" = "green",
"Post-Monsoon" = "purple")) +
labs(x = "Year (1900 - 2024)",
y = "Total Rainfall (in mm)",
title = "Seasonal Rainfall Trends in Mumbai (1900 - 2024)",
subtitle = "Grouped by Winter, Summer, Monsoon, and Post-Monsoon",
caption = "Data Source: Kaggle | Visualization: James Lewis") +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
legend.position = "right")
# Animate over the years with shadow effect
seasonal_animation <- seasonal_plot +
seasonal_plot <- ggplot(seasonal_rainfall, aes(x = Year, y = Total_Rainfall, colour = Season)) +
geom_line(size = 4) +  # Thicker lines
geom_point(size = 5, alpha = 0.8) +  # Larger points with some transparency
scale_color_manual(values = c("Winter" = "steelblue",
"Summer" = "orange",
"Monsoon" = "green",
"Post-Monsoon" = "purple")) +
labs(x = "Year (1900 - 2024)",
y = "Total Rainfall (in mm)",
title = "Seasonal Rainfall Trends in Mumbai (1900 - 2024)",
subtitle = "Grouped by Winter, Summer, Monsoon, and Post-Monsoon",
caption = "Data Source: Kaggle | Visualization: James Lewis") +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
axis.title = element_text(face = "bold"),
axis.text = element_text(size = 12),
legend.position = "right")
seasonal_animation <- seasonal_plot +
transition_time(Year) +
ease_aes('linear') +
shadow_mark(alpha = 0.3, size = 1, colour = "gray")
animate(seasonal_animation, nframes = 200, fps = 15, width = 800, height = 600, renderer = gifski_renderer("seasonal_rainfall_mumbai.gif"))
seasonal_animation <- seasonal_plot +
transition_time(Year) +
ease_aes('linear') +
shadow_line(alpha = 0.3, size = 1, colour = "gray")
seasonal_animation <- seasonal_plot +
transition_time(Year) +
ease_aes('linear') +
shadow_trail(alpha = 0.7, size = 1, colour = "gray")
# Render the animation
animate(seasonal_animation, nframes = 200, fps = 15, width = 800, height = 600, renderer = gifski_renderer("seasonal_rainfall_mumbai.gif"))
seasonal_animation <- seasonal_plot +
transition_time(Year) +
ease_aes('linear') +
shadow_mark(alpha = 0.7, size = 1, colour = "gray")
# Render the animation
animate(seasonal_animation, nframes = 200, fps = 15, width = 800, height = 600, renderer = gifski_renderer("seasonal_rainfall_mumbai.gif"))
